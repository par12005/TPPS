<?php

//hook_init
function custom_module_init() {

//    drupal_set_message("Hello");
}

function custom_module_menu() {

    $items = array();

    $items['Hellopage'] = array(
      'title' => 'TPPS Development',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('custom_module_showCustomModuleForm'),
      'access callback' => 'user_access',
      'access arguments' => array('access content'),
      'type' => MENU_NORMAL_ITEM,
      'file' => 'page_1.php'
    );

    $items['secondPage'] = array(
      'title' => 'TPPS Development',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('custom_module_showCustomModuleForm_second_page'),
      'access callback' => 'user_access',
      'access arguments' => array('access content'),
      'type' => MENU_NORMAL_ITEM,
      'file' => 'page_2.php'
    );
    
    $items['thirdPage'] = array(
      'title' => 'TPPS Development',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('custom_module_showCustomModuleForm_third_page'),
      'access callback' => 'user_access',
      'access arguments' => array('access content'),
      'type' => MENU_NORMAL_ITEM,
      'file' => 'page_3.php'
    );
    
    /*$items['fourthPage'] = array(
      'title' => 'TPPS Development',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('custom_module_showCustomModuleForm_fourth_page'),
      'access callback' => 'user_access',
      'access arguments' => array('access content'),
      'type' => MENU_NORMAL_ITEM
    );*/

    $items['getHello'] = array(
      'page callback' => 'custom_module_ajaxCallHandler',
      'access callback' => 'user_access',
      'access arguments' => array('access content'),
      'type' => MENU_CALLBACK
    );
    
    $items['author/autocomplete'] = array(
      'title' => 'Autocomplete for Authors',
      'page callback' => '_author_autocomplete',
      'access arguments' => array('access content'),
      'type' => MENU_CALLBACK
    );
    
    $items['organization/autocomplete'] = array(
      'title' => 'Autocomplete for Organizations',
      'page callback' => '_organization_autocomplete',
      'access arguments' => array('access content'),
      'type' => MENU_CALLBACK
    );
    
    $items['journal/autocomplete'] = array(
      'title' => 'Autocomplete for Publications',
      'page callback' => '_journal_autocomplete',
      'access arguments' => array('access content'),
      'type' => MENU_CALLBACK
    );
    
    $items['structure/autocomplete'] = array(
      'title' => 'Autocomplete for Ontological terms',
      'page callback' => '_structure_autocomplete',
      'access arguments' => array('access content'),
      'type' => MENU_CALLBACK
    );
    
    $items['developmental/autocomplete'] = array(
      'title' => 'Autocomplete for Ontological terms',
      'page callback' => '_development_autocomplete',
      'access arguments' => array('access content'),
      'type' => MENU_CALLBACK
    );

    return $items;
}

function custom_module_ajaxCallHandler() {

    global $user;

    if (empty($_GET['token']) || !drupal_valid_token($_GET['token'], 'my secret value' . $user->uid)) {
        return MENU_ACCESS_DENIED;
    }

    echo "Hello, " . filter_xss($_GET['name']) . "!";
}

function custom_module_showCustomModuleForm() {
    include_once  'page_1.php';
    
    $form = page_1_create_form($form);
    
    return $form;
}

function custom_module_showCustomModuleForm_validate($form, &$form_state) {
    include_once 'page_1.php';
    
    page_1_validate_form($form, $form_state);
}

function custom_module_showCustomModuleForm_submit($form, &$form_state) {
    include_once 'page_1.php';
 
    page_1_submit_form($form, $form_state);
}

function custom_module_showCustomModuleForm_second_page() {
    include_once  'page_2.php';
    
    $form = page_2_create_form($form);
    
    return $form;
}

function custom_module_showCustomModuleForm_second_page_validate($form, &$form_state){
    include_once 'page_2.php';
    
    page_2_validate_form($form, $form_state);
}

function custom_module_showCustomModuleForm_second_page_submit($form, &$form_state) {
    include_once 'page_2.php';
 
    page_2_submit_form($form, $form_state);
}

function custom_module_showCustomModuleForm_third_page() {
    include_once  'page_3.php';
    
    $form = page_3_create_form($form);
    
    return $form;
}

function custom_module_showCustomModuleForm_third_page_validate($form, &$form_state){
    include_once 'page_3.php';
    
    page_3_validate_form($form, $form_state);
}

function custom_module_showCustomModuleForm_third_page_submit($form, &$form_state) {
    include_once 'page_3.php';
 
    page_3_submit_form($form, $form_state);
}

function _structure_autocomplete($string){
    $matches = array();
    $result = db_select('chado.cv', 'cv')
        ->fields('cv', array('name', 'definition'))
        ->condition('name', '%' . db_like($string) . '%', 'LIKE')
        ->execute();
    
    foreach($result as $row){
        if ($row->definition != ""){
            $matches[$row->name] = check_plain($row->name . ":  " . $row->definition);
        }
        else{
            $matches[$row->name] = check_plain($row->name . ":  No definition on record");
        }
    }
    
    drupal_json_output($matches);
}

function _development_autocomplete($string){
    $matches = array();
    $result = db_select('chado.cv', 'cv')
        ->fields('cv', array('name', 'definition'))
        ->condition('name', '%' . db_like($string) . '%', 'LIKE')
        ->execute();
    
    foreach($result as $row){
        if ($row->definition != ""){
            $matches[$row->name] = check_plain($row->name . ":  " . $row->definition);
        }
        else{
            $matches[$row->name] = check_plain($row->name . ":  No definition on record");
        }
    }
    
    drupal_json_output($matches);
}

function _author_autocomplete($string){
    $matches = array();
    $result = db_select('chado.contact', 'contact')
        ->fields('contact', array('name', 'type_id'))
        ->condition('name', '%' . db_like($string) . '%', 'LIKE')
        ->condition('type_id', '71', 'LIKE')
        ->range(0, 50)
        ->execute();
    
    foreach($result as $row){
        $matches[$row->name] = check_plain($row->name);
    }
    
    drupal_json_output($matches);
}

function _organization_autocomplete($string){
    $matches = array();
    $result = db_select('chado.contact', 'contact')
        ->fields('contact', array('name', 'type_id'))
        ->condition('name', '%' . db_like($string) . '%', 'LIKE')
        ->condition('type_id', '72', 'LIKE')
        ->range(0, 50)
        ->execute();
    
    foreach($result as $row){
        $matches[$row->name] = check_plain($row->name);
    }
    
    drupal_json_output($matches);
}

function _journal_autocomplete($string){
    $matches = array();
    $result = db_select('chado.pub', 'pub')
        ->fields('pub', array('series_name'))
        ->condition('series_name', '%' . db_like($string) . '%', 'LIKE')
        ->range(0, 50)
        ->execute();
    
    foreach($result as $row){
        $matches[$row->series_name] = check_plain($row->series_name);
    }
    
    drupal_json_output($matches);
}

function custom_module_showCustomModuleForm_fourth_page(){
    
    /*$form['button'] = array(
      '#type' => 'button',
      '#button_type' => 'button',
      '#title' => t('Button-Title'),
      '#value' => t('Button-Value'),
      '#submit' => array(),
    );*/
    
    $form['submit'] = array(
      '#type' => 'submit',
      '#title' => t('Submit'),
      '#value' => t('Submit')
    );
    
    return $form;
}

function custom_module_showCustomModuleForm_fourth_page_validate($form, &$form_state){

}

function custom_module_showCustomModuleForm_fourth_page_submit($form, &$form_state) {
    $form_state['redirect'] = 'fourthPage';
}
