<?php

//hook_init
function custom_module_init() {

//    drupal_set_message("Hello");
}

function custom_module_menu() {

    $items = array();

    $items['Hellopage'] = array(
      'title' => 'TGDR Development',
      'description' => 'Hello, Users',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('custom_module_showCustomModuleForm'),
      'access callback' => 'user_access',
      'access arguments' => array('access content'),
      'type' => MENU_NORMAL_ITEM
    );

    $items['getHello'] = array(
      'page callback' => 'custom_module_ajaxCallHandler',
      'access callback' => 'user_access',
      'access arguments' => array('access content'),
      'type' => MENU_CALLBACK
    );

    return $items;
}

//This function is only necessary when using AJAX
function custom_module_ajaxCallHandler() {

    global $user;

    if (empty($_GET['token']) || !drupal_valid_token($_GET['token'], 'my secret value' . $user->uid)) {
        return MENU_ACCESS_DENIED;
    }

    echo "Hello, " . filter_xss($_GET['name']) . "!";
}

/* This function is what literally shows the form to the user
 * It contains all of the form elements.  They are all defined 
 * in Drupal's API format
 */


function custom_module_showCustomModuleForm() {

    $form['primaryAuthor'] = array(                                             //This should be changed to a button that will generate new author fields
      '#type' => 'select',
      '#title' => t('Primary Author'),
      '#options' => array(
        0 => t('--Primary Author--'),
        1 => t('Author 1'),
        2 => t('Author 2'),
        3 => t('Author 3'),
      ),
      '#default_value' => 0,
      );
    
    $form['#suffix'] = '<input type="button" id="button" value="Add Author"><br/><div id="msg-display-area"></div>';
//    $form['#suffix'] = '<input type="button" id="removeAuthor" value="removeAuthor"><br/><div id="msg-display-area"></div>';
    
    for($i = 0; $i < 30; $i++){
       $form['secondaryAuthorForm' . $i] = array(
      '#prefix' => '<div id= secondaryAuthor' . $i . '>',
      '#type' => 'select',
      '#options' => array(
        0 => t('--Secondary Author--'),
        1 => t('Author 1'),
        2 => t('Author 2'),
        3 => t('Other'),
      ),
      '#default_value' => 0,
      );
       
       $form['secondaryAuthorCustomForm' . $i] = array(
      '#suffix' => '</div>',
      '#type' => 'textfield',
      '#disabled' => true,
      '#default_value' => '',
      );
    }
    
//  change the enable with jQuery -  do NOT alter the settings of other forms with jQuery.  
    
    $form['organization'] = array(
      '#type' => 'select',
      '#title' => t('Organization'),
      '#options' => array(
        0 => t('--Organization--'),
        1 => t('Organization 1'),
        2 => t('Organization 2'),
        3 => t('Organization 3'),
      ),
      '#default_value' => 0,
    );
 
    $form['publicationStatus'] = array(
      '#type' => 'select',
      '#title' => t('Publication Status'),
      '#options' => array(
        0 => t('--Publication Status--'),
        1 => t('In Preparation'),
        2 => t('Submitted'),
        3 => t('In press'),
        4 => t('Published'),
      ),
      '#default_value' => 4,
    );
    
    $form['year'] = array(
      '#type' => 'select',
      '#title' => t('Year'),
      '#options' => array(
        0 => t('--Year--'),
        1 => t('1994'),
        2 => t('1995'),
        3 => t('1996'),
        4 => t('1997'),
      ),
      '#default_value' => 4,
    );
    
     $form['title'] = array(
       '#type' => 'textfield',
       '#title' => t('Title')
     );
     
     $form['abstract'] = array(
       '#type' => 'textfield',
       '#title' => t('Abstract'),
     );
     
     $form['journal'] = array(
       '#type' => 'select',
       '#type' => t('Journal'),
       '#options' => array(
         0 => 'Journal 1',
         1 => 'Journal 2',
         3 => 'Journal 3',
       ),
     );
     
      $form['speciesNumber'] = array(
      '#type' => 'select',
      '#title' => t('Please Select the Number of Species under Study'),
      '#options' => array(
        0 => t('--species--'),
        1 => t('1'),
        2 => t('2'),
        3 => t('3'),
        4 => t('4'),
        5 => t('5'),
        6 => t('6'),
        7 => t('7'),
        8 => t('8'),
        9 => t('9'),
        10 => t('10'),
      ),
      '#default_value' => 1,
    );
      
      $form['species'] = array(
        '#type' => 'select',
        '#title' => t('Species'),
        '#options' => array(
          0 => '---Select a Species---',
          1 => 'Species 1',
          2 => 'Species 2',
          3 => 'Species 3',
        ),
        '#default_value' => 0,
      );
      
      for ($i = 0; $i < 9; $i++) {
        $form['species' . $i] = array(
        '#type' => 'select',
        '#options' => array(
          0 => '---Select a Species---',
          1 => 'Species 1',
          2 => 'Species 2',
          3 => 'Species 3',
        ),
        '#default_value' => 0,
      );
} 
      
     
      $form['submit'] = array(
        '#type' => 'submit',
        '#value' => 'Submit',
        );

    /* This is the convention for adding JS files to your form.
     * Since it is added directly to the form, I would imagine 
     * it is only accessible to this specific form.  
     */
    drupal_add_js(drupal_get_path('module', 'custom_module') . "/custom_module.js");

    /*
     * This is instantiating a user token.  It will be verified
     * in the JS file and they will not be given acess to data 
     * returned by AJAX if their token is invalid (if not logged
     * in).
     */
    global $user;
    $newToken = drupal_get_token("my secret value" . $user->uid);
    drupal_add_js("var myToken='$newToken'", "inline");

    return $form;
}

function custom_module_showCustomModuleForm_submit($form, &$form_state) {
//    $primaryAuthor = $form_state['values']['primaryAuthor'];
//    $organization = $form_state['values']['organization'];
//    $publicationStatus = $form_state['values']['publicationStatus'];
//    $year = $form_state['values']['year'];
//    $title = $form_state['values']['title'];
//    $abstract = $form_state['values']['abstract'];
//    $species = $form_state['values']['species'];
//    
//    if ($species == 1){
//        drupal_set_message('duplicating forms with jquery isnt a great idea');
//    }
//    else{
//        }
//        
//    if ($primaryAuthor == ''){
//        drupal_set_message('this isnt a good idea');
//    }
    
    

//    if ($form_state['values']['name'] == "") {
//
//        form_set_error("name", "Name cannot be empty");
//    }
//    else{
//
//        drupal_set_message("Hello, " . $form_state['values']['name'] . "!");
//    }
}


//Potentially important forms below:
//
//$form['commonGardenSelect'] = array(
//      '#type' => 'select',
//      '#title' => t('Sample question only applicable to common garden studies:'),
//      '#options' => array(
//        0 => t('--Select--'),
//      ),
//      '#default_value' => 0,
//      '#description' => t('One example of the questions asked to somone who performed a common garden study.'),
//      //This is the way to add a class to a form element:
//      '#attributes' => array('class' => array('commonGardenClass')),
//      '#title_attributes' => array('class' => array('commonGardenClass')),
//      '#description_attributes' => array('class' => array('commonGardenClass')),
//    );
//
//    $form['plantationSelect'] = array(
//      '#type' => 'select',
//      '#title' => t('Sample question only applicable to plantation studies:'),
//      '#options' => array(
//        0 => t('--Select--'),
//      ),
//      '#default_value' => 0,
//      '#description' => t('One example of the questions asked to somone who performed a plantation study.'),
//      //This is the way to add a class to a form element:
//      '#attributes' => array('class' => array('plantationClass')),
//    );
//
//    $form['natPopSelect'] = array(
//      '#type' => 'select',
//      '#title' => t('Sample question only applicable to natural population studies:'),
//      '#options' => array(
//        0 => t('--Select--'),
//      ),
//      '#default_value' => 0,
//      '#description' => t('One example of the questions asked to somone who performed a natural population study.'),
//      //This is the way to add a class to a form element:
//      '#attributes' => array('class' => array('natPopClass')),
//    );
//$form['study'] = array(
//      '#type' => 'select',
//      '#title' => t('Please Select Your Study Type:'),
//      '#options' => array(
//        0 => t('--Study Type--'),
//        1 => t('Common Garden'),
//        2 => t('Plantation'),
//        3 => t('Natural Population'),
//      ),
//      '#default_value' => 0,
//      '#description' => t('Here, we will provide the user with a short description of the 3 options in order to get an accurate answer.'),
//    );
