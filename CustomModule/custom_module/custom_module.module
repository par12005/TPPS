<?php

//hook_init
function custom_module_init() {

//    drupal_set_message("Hello");
}

function custom_module_menu() {

    $items = array();

    $items['Hellopage'] = array(
      'title' => 'TGDR Development',
      'description' => 'Hello, Users',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('custom_module_showCustomModuleForm'),
      'access callback' => 'user_access',
      'access arguments' => array('access content'),
      'type' => MENU_NORMAL_ITEM
    );

    $items['getHello'] = array(
      'page callback' => 'custom_module_ajaxCallHandler',
      'access callback' => 'user_access',
      'access arguments' => array('access content'),
      'type' => MENU_CALLBACK
    );

    return $items;
}

//This function is only necessary when using AJAX
function custom_module_ajaxCallHandler() {

    global $user;

    if (empty($_GET['token']) || !drupal_valid_token($_GET['token'], 'my secret value' . $user->uid)) {
        return MENU_ACCESS_DENIED;
    }

    echo "Hello, " . filter_xss($_GET['name']) . "!";
}

/* This function is what shows the form to the user
 * It contains all of the form elements. 
 */


function custom_module_showCustomModuleForm() {
    
//    $authorArr = array();
//    $authorResults = db_query('SELECT DISTINCT pub.uniquename FROM chado.pub ORDER BY uniquename LIMIT 200');
//    
//    foreach($authorResults as $r){
//        array_push($authorArr, $r->uniquename);
//    }

    $organizationArr = array();
    $organizationResults = db_query('SELECT DISTINCT contact.name FROM chado.contact ORDER BY contact.name');
    
    foreach($organizationResults as $r){
        array_push($organizationArr, $r->name);
    }
    
    $form['primaryAuthor'] = array(
      '#prefix' => '<div id= primaryauthor>',
      '#suffix' => '</div>',
      '#type' => 'select',
      '#title' => t('Primary Author'),
      '#options' => $organizationArr,
      '#required' => true,
      '#default_value' => 0,
      );
    
    
    $form['#suffix'] = '<input type="button" id="button" value="Add Author"><br/><div></div>';
    
    for($i = 0; $i < 30; $i++){
       if ($i == 0){
            $form['secondaryAuthorForm' . $i] = array(
      '#prefix' => '<div id= secondaryAuthor' . $i . '>',
      '#type' => 'select',
      '#options' => $organizationArr,
      '#default_value' => 0,
      );
       
       $form['secondaryAuthorCustomForm' . $i] = array(
      '#suffix' => '</div>',
      '#type' => 'textfield',
      '#disabled' => true,
      '#default_value' => '',
      );   
       }
       else{
       $form['secondaryAuthorForm' . $i] = array(
      '#prefix' => '<div id= secondaryAuthor' . $i . '>',
      '#type' => 'select',
      '#options' => $organizationArr,
      );
       
       $form['secondaryAuthorCustomForm' . $i] = array(
      '#suffix' => '</div>',
      '#type' => 'textfield',
      '#disabled' => true,
      '#default_value' => '',
      );
       }
    }
    
    $form['organization'] = array(
      '#type' => 'select',
      '#title' => t('Organization'),
      '#options' => $organizationArr,
      '#required' => true,
    );
 
    $form['publicationStatus'] = array(
      '#type' => 'select',
      '#title' => t('Publication Status'),
      '#options' => array(
        0 => t('--Publication Status--'),
        1 => t('In Preparation'),
        2 => t('Submitted'),
        3 => t('In press'),
        4 => t('Published'),
      ),
      '#required' => true,
      '#default_value' => 4,
    );
    
    $yearArr = Array();
    for($i = 1950; $i <= 2017; $i++){
        array_push($yearArr, $i);
    }
    
    
    $form['year'] = array(
      '#type' => 'select',
      '#title' => t('Year'),
      '#options' => $yearArr,
      '#required' => true,
      '#default_value' => 0,
    );

     $form['title'] = array(
       '#type' => 'textfield',
       '#title' => t('Title'),
       '#required' => true,
     );
     
     $form['abstract'] = array(
       '#type' => 'textfield',
       '#title' => t('Abstract'),
       '#required' => true,
     );
     
     $journalArr = Array();
     $journalResults = db_query('SELECT DISTINCT series_name FROM chado.pub ORDER BY series_name');
     
     foreach($journalResults as $r){
         array_push($journalArr, $r->series_name);
     }

     $form['jorunal'] = array(
      '#type' => 'select',
      '#title' => t('Journal'),
      '#options' => $journalArr,
      '#default_value' => 1,
    );
     
      $form['speciesNumber'] = array(
      '#type' => 'select',
      '#title' => t('Please Select the Number of Species under Study'),
      '#options' => array(
        1 => t('0'),
        2 => t('1'),
        3 => t('2'),
        4 => t('3'),
        5 => t('4'),
        6 => t('5'),
        7 => t('6'),
        8 => t('7'),
        9 => t('8'),
        10 => t('9'),
      ),
      '#default_value' => 1,
    );
     
      
      $myResult = db_query('SELECT DISTINCT genus FROM chado.organism ORDER BY genus');
      $myArray = Array();
      
      foreach($myResult as $r){
          array_push($myArray, $r->genus);
      }
          
      $myArray2 = Array();
      $myResult2 = db_query('SELECT DISTINCT species FROM chado.organism ORDER BY species');
      
      foreach($myResult2 as $r){
          array_push($myArray2, $r->species);
      }
          
      for($i = 0; $i < 15; $i++){
       if ($i == 0){
            $form['genus' . $i] = array(
      '#prefix' => '<div id= genusSpecies' . $i . '>',
      '#type' => 'select',
      '#options' => $myArray,
      '#default_value' => 0,
      );
       
       $form['species' . $i] = array(
      '#type' => 'select',
      '#options' => $myArray2,
      '#default_value' => 0,
      );
       
      $form['customSpecies' . $i] = array(
       '#suffix' => '</div>',
       '#type' => 'textfield',
       '#default_value' => '',
     );
      
       }
       else{
       $form['genus' . $i] = array(
      '#prefix' => '<div id= genusSpecies' . $i . '>',
      '#type' => 'select',
      '#options' => $myArray,
      '#default_value' => 0,
      );
      $form['species' . $i] = array(
      '#type' => 'select',
      '#options' => $myArray2,
      '#default_value' => 0,
      );
       }
     $form['customSpecies' . $i] = array(
       '#suffix' => '</div>',
       '#type' => 'textfield',
       '#disabled' => true,
       );  
     
    }

      $form['keywords'] = array(
        '#type' => 'textfield',
        '#title' => t('Keywords'),
        '#description' => t('Please submit keywords separated by commmas'),
        '#required' => true,
        );
      
      
      $form['submit'] = array(
        '#type' => 'submit',
        '#value' => 'Submit',
        );
      
      $form['user'] = array(
      '#type' => 'markup',
      '#tree' => TRUE,
      '#title' => 'User Permissions',
    );

    /* This is the convention for adding JS files to your form.
     * Since it is added directly to the form, I would imagine 
     * it is only accessible to this specific form.  
     */
    drupal_add_js(drupal_get_path('module', 'custom_module') . "/custom_module.js");

    /*
     * This is instantiating a user token.  It will be verified
     * in the JS file and they will not be given acess to data 
     * returned by AJAX if their token is invalid (if not logged
     * in).
     */
    global $user;
    $newToken = drupal_get_token("my secret value" . $user->uid);
    drupal_add_js("var myToken='$newToken'", "inline");

    return $form;
}

function custom_module_showCustomModuleForm_validate($form, $form_state){
    
//    This should be fixed to prompt the user with multiple error messages
    
    $primaryAuthor = $form_state['values']['primaryAuthor'];
    $organization = $form_state['values']['organization'];
    $publicationStatus = $form_state['values']['publicationStatus'];
    $year = $form_state['values']['year'];
    $title = $form_state['values']['title'];
    $abstract = $form_state['values']['abstract'];
    $keywords = $form_state['values']['keywords'];
    
    $empty = 0;
    $blank = '';                                                                                
    
    for ($i = 0; $i < 15; $i++){
        $genus = $form_state['values']['genus' . $i];
        $species = $form_state['values']['species' . $i];
        $customSpecies = $form_state['values']['customSpecies' . $i];
        $speciesSuccess = false;
        
        if ($genus == 0 && $species != 0){
            form_set_error('Please enter a species for every genus selected');
        }
        else if ($genus != 0 && $species == 0){
            form_set_error('Please enter a genus for every species selected');
        }
        
        else if ($genus == 0 && $customSpecies != ''){
            form_set_error('Please enter a genus for your inputted species');
        }
        
        else if($genus != 0 && $customSpecies == ''){
            form_set_error('Please enter a valid species name for your inputted species');
        }
        
        else{
            $speciesSuccess = true;
        }
        
    }
    
    if ($speciesSuccess){
        form_set_error('Please enter at least one species under study');
    }
    else{
        
    }
    
    $secondaryAuthorArray = Array();
    
    for ($i = 0; $i < 30; $i++){
        if ($form_state['values']['secondaryAuthorForm' . $i] != $empty){
            array_push($secondaryAuthorArray, $form_state['values']['secondaryAuthorForm' . $i]);
        }
        else{
        }
        
        if ($form_state['values']['secondaryAuthorCustomForm' . $i] != $blank)
        {
            array_push($secondaryAuthorArray, $form_state['values']['secondaryAuthorCustomForm' . $i]);
        }
        
        else{
            
        }
    }
    
}

function custom_module_showCustomModuleForm_submit($form, &$form_state) {
}